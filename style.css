/* variables */
:root {
  --primary: hsl(43, 100%, 61%, 1);
  --secondary: hsl(239, 80%, 20%, 1);
}

/* reset browser default styles */
body,
p,
a,
ul,
li {
  margin: 0;
  padding: 0;
  text-decoration: none;
}
li {
  list-style-type: none;
}

/* base styles */
body {
  background: var(--secondary);
  overflow-x: hidden;
  /* font-size: clamp(1rem, 2vw, 1.25rem); */
  font-size: clamp(1rem, 0.9167rem + 0.3704vw, 1.25rem);
  font-family: "Rubik-Regular";
}
.button {
  background: none;
  border: 2px solid var(--primary);
  color: var(--primary);
  padding: 6px 12px;
  border-radius: 20px;
  text-transform: uppercase;
  box-shadow: 1px 2px 3px hsl(0, 0%, 13%, 1);
  display: inline-block;
}
.button:hover {
  color: #222;
  background: var(--primary);
}
input,
textarea {
  background: rgba(255, 255, 255, 0.05);
  padding: 10px 16px;
  border-radius: 20px;
  border: 2px solid #9893d8;
  color: #f2f2f2;
  /* font-family: "Rubik-Regular"; */
}

/* fonts */
/* Register your own local fonts using font-face */
@font-face {
  font-family: "Rubik-Regular";
  src: url(assets/fonts/Rubik/static/Rubik-Regular.ttf);
}

h1,
h2,
h3,
h4 {
  color: #dddbff;
  font-weight: normal;
}

p,
a,
li {
  color: #9893d8;
}

h1,
h3 {
  font-size: 1.2em;
}

h2 {
  font-size: 1.6em;
}

h4 {
  font-size: 1.1em;
}

.leading {
  font-size: 1.1em;
}
/* mobile styles */
/* NOTE This is more like a GLOBAL grid config since we apply grid class multiple times */
/* Could certainly configure separate custom grids if needed */
.grid {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  gap: 10px;
}

.site-nav {
  margin: 0 20px;
}

.site-nav ul {
  display: none;
}

.site-nav h1 {
  /* grid-column: 1 / 4; */
  /* grid-row: 1 */
  grid-area: 1 / 1 / 2 / 5;
  padding-bottom: 10px;
  border-bottom: 3px solid var(--primary);
}

#welcome {
  padding: 0 20px 20px 20px;
}

.welcome-text {
  grid-area: 1 / 1 / 2 / 6;
}

.welcome-text a {
  margin: 20px 0;
}

.welcome-img {
  grid-area: 1 / 6 / 2 / 9;
}

.welcome-img img {
  /* Shrink default img size by set 200% of its container (3 column grid) */
  width: 200%;
}

#portfolio {
  background-image: url(assets/square_bg.png);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom;
  padding: 30px 20px;
}

#portfolio h3 {
  margin-bottom: 0;
  text-align: center;
}

.projects a {
  /* Each anchor tag takes up all columns (fills a single row) */
  /* so automatically stacks vertically */
  grid-column: 1 / 9;
  margin: 20px 0;
  display: flex;
}

.projects a * {
  margin: 0 20px;
  max-width: 40%;
  align-self: center;
}

.projects h4 {
  color: #9994f7;
}

#skills {
  padding: 30px 20px;
  background: #07083e;
}

#skills h3 {
  /* margin-bottom: 0; */
  text-align: center;
}

#skills ul {
  margin: 40px 0;
}

#skills li {
  padding: 10px;
  background: rgba(0, 0, 0, 0.1);
  /* display: flex; */
  /* Each li will take up 4 columns (out of 8) to have 2 per row */
  grid-column: span 4;
  text-align: center;
}

#skills img {
  height: 80px;
  margin: 10px auto;
}

#skills p {
  text-align: center;
  margin: 0 20px;
}

/* #skills li h4 { */
/*   color: #9994f7; */
/* } */

#contact {
  padding: 30px 20px;
  background: #080936;
}

#contact h3,
#contact p {
  text-align: center;
  margin-bottom: 0;
}

#contact form {
  width: 80%;
  max-width: 400px;
  margin: 20px auto;
  text-align: center;
}

#contact input,
#contact textarea {
  width: 100%;
  margin: 10px 0;
  /* Make the width fill form inner box (border-box vs. content-box) */
  box-sizing: border-box;
}

#contact .button {
  margin-top: 10px;
}

footer {
  padding: 30px 20px;
  /* Going to add an image so using bg-color instead of just bg */
  background-color: #14153d;
  background-image: url(assets/footer_image.png);
  background-size: 40%;
  /* Only display once using no-repeat */
  background-repeat: no-repeat;
  background-position: top center;
}

footer .copyright {
  grid-column: 1 / 3;
  font-size: 0.8em;
}

/* Using display: flex to place side-by-side */
footer .social {
  grid-column: 7 / 9;
  /* Make the icons side-by-side using display:flex */
  display: flex;
  /* Justify all content to end/edge of columns */
  justify-content: flex-end;
}

footer li {
  margin: 0 6px;
}

footer img {
  width: 30px;
}

/* Media Queries */
/* /1* small tablet styles *1/ */
@media screen and (min-width: 620px) {
  /* Reduce number of columns spanned */
  .welcome-text {
    grid-area: 1 / 1 / 2 / 5;
  }

  .welcome-img {
    grid-column: 5 / 9;
  }

  .welcome-img img {
    width: 100%;
  }

  .projects {
    margin-top: 40px;
  }

  .projects a {
    grid-column: span 4;
    display: block;
    margin: 20px 0;
  }

  .projects a:last-child {
    grid-column: 3 / 7;
    /* align-self: center; */
    /* justify-self: center; */
  }

  /* Justify all the items in each anchor to be in middle */
  /* Tried grid items-only props (align-self, justify-self) but no good */
  .projects a * {
    max-width: 60%;
    /* Use remaining 40% of width to push to center */
    margin: 10px 20%;
  }

  .projects a h4 {
    text-align: center;
  }

  #skills {
    /* Bring in/squeeze everything inward a little */
    padding: 30px 80px;
  }

  footer {
    background-size: 20%;
  }
}

/* large tablet styles */
@media screen and (min-width: 960px) {
  /* body { */
  /*   font-size: 18px; */
  /* } */
}

/* desktop tablet styles */
@media screen and (min-width: 1200px) {
  /* body { */
  /*   font-size: 20px; */
  /* } */
}

/* NOTE Could also consider clamp(min, preferred, max) */
/* e.g, article { width: clamp(200px, 50%, 600px) } */
